{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/transition/index.mjs","../../node_modules/sveltestrap/src/utils.js","../../node_modules/sveltestrap/src/Alert.svelte","../../node_modules/sveltestrap/src/Button.svelte","../../node_modules/svelte/store/index.mjs","../../node_modules/sveltestrap/src/Nav.svelte","../../node_modules/sveltestrap/src/Navbar.svelte","../../node_modules/sveltestrap/src/NavItem.svelte","../../node_modules/sveltestrap/src/NavLink.svelte","../../node_modules/sveltestrap/src/NavbarBrand.svelte","../../node_modules/sveltestrap/src/Table.svelte","../../node_modules/svelte-spa-router/Router.svelte","../../node_modules/regexparam/dist/regexparam.mjs","../../src/front/lifeExpectancy.svelte","../../src/front/TablaAlcohol.svelte","../../src/front/Smokers.svelte","../../src/front/weightsStats/TablaWeights.svelte","../../src/front/weightsStats/EditWeight.svelte","../../src/front/App.svelte","../../src/front/index.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nconst nodes_to_detach = new Set();\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n    for (const node of nodes_to_detach) {\n        node.parentNode.removeChild(node);\n    }\n    nodes_to_detach.clear();\n}\nfunction append(target, node) {\n    if (is_hydrating) {\n        nodes_to_detach.delete(node);\n    }\n    if (node.parentNode !== target) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    if (is_hydrating) {\n        nodes_to_detach.delete(node);\n    }\n    if (node.parentNode !== target || (anchor && node.nextSibling !== anchor)) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (is_hydrating) {\n        nodes_to_detach.add(node);\n    }\n    else if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    while (nodes.length > 0) {\n        const node = nodes.shift();\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return node;\n        }\n        else {\n            detach(node);\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","export function getOriginalBodyPadding() {\n  const style = window ? window.getComputedStyle(document.body, null) : {};\n\n  return parseInt((style && style.getPropertyValue('padding-right')) || 0, 10);\n}\n\nexport function getScrollbarWidth() {\n  let scrollDiv = document.createElement('div');\n  // .modal-scrollbar-measure styles // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/scss/_modal.scss#L106-L113\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.width = '50px';\n  scrollDiv.style.height = '50px';\n  scrollDiv.style.overflow = 'scroll';\n  document.body.appendChild(scrollDiv);\n  const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n}\n\nexport function setScrollbarWidth(padding) {\n  document.body.style.paddingRight = padding > 0 ? `${padding}px` : null;\n}\n\nexport function isBodyOverflowing() {\n  return window ? document.body.clientWidth < window.innerWidth : false;\n}\n\nexport function isObject(value) {\n  const type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport function conditionallyUpdateScrollbar() {\n  const scrollbarWidth = getScrollbarWidth();\n  // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.6/js/src/modal.js#L433\n  const fixedContent = document.querySelectorAll(\n    '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'\n  )[0];\n  const bodyPadding = fixedContent\n    ? parseInt(fixedContent.style.paddingRight || 0, 10)\n    : 0;\n\n  if (isBodyOverflowing()) {\n    setScrollbarWidth(bodyPadding + scrollbarWidth);\n  }\n}\n\nexport function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : `col-${colWidth}`;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : `col-${colWidth}-auto`;\n  }\n\n  return isXs ? `col-${colSize}` : `col-${colWidth}-${colSize}`;\n}\n\nexport function clean($$props) {\n  // TODO support keys\n  // eslint-disable-next-line no-unused-vars\n  const { children, $$scope, $$slots } = $$props;\n  const rest = {};\n  for (const key of Object.keys($$props)) {\n    if (key !== 'children' && key !== '$$scope' && key !== '$$slots') {\n      rest[key] = $$props[key];\n    }\n  }\n  return rest;\n}\n\nexport function browserEvent(target, ...args) {\n  target.addEventListener(...args);\n\n  return () => target.removeEventListener(...args);\n}\n\nexport function getNewCarouselActiveIndex(direction, items, activeIndex) {\n  if (direction === 'prev') {\n    return activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n  } else if (direction === 'next') {\n    return activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n  }\n}\n\nfunction toClassName(value) {\n  let result = '';\n\n  if (typeof value === 'string' || typeof value === 'number') {\n    result += value;\n  } else if (typeof value === 'object') {\n    if (Array.isArray(value)) {\n      result = value.map(toClassName).filter(Boolean).join(' ');\n    } else {\n      for (let key in value) {\n        if (value[key]) {\n          result && (result += ' ');\n          result += key;\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\nexport default function classnames(...args) {\n  return args.map(toClassName).filter(Boolean).join(' ');\n}\n","<script>\n  import { fade as fadeTransition } from 'svelte/transition';\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let children = undefined;\n  export let color = 'success';\n  export let closeClassName = '';\n  export let closeAriaLabel = 'Close';\n  export let isOpen = true;\n  export let toggle = undefined;\n  export let fade = true;\n  export let transition = { duration: fade ? 400 : 0 };\n\n  $: classes = classnames(className, 'alert', `alert-${color}`, {\n    'alert-dismissible': toggle\n  });\n  $: closeClassNames = classnames('close', closeClassName);\n</script>\n\n{#if isOpen}\n  <div\n    {...$$restProps}\n    transition:fadeTransition={transition}\n    class={classes}\n    role=\"alert\">\n    {#if toggle}\n      <button\n        type=\"button\"\n        class={closeClassNames}\n        aria-label={closeAriaLabel}\n        on:click={toggle}>\n        <span aria-hidden=\"true\">×</span>\n      </button>\n    {/if}\n    {#if children}\n      {children}\n    {:else}\n      <slot />\n    {/if}\n  </div>\n{/if}\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let active = false;\n  export let block = false;\n  export let children = undefined;\n  export let close = false;\n  export let color = 'secondary';\n  export let disabled = false;\n  export let href = '';\n  export let outline = false;\n  export let size = null;\n  export let style = '';\n  export let value = '';\n\n  $: ariaLabel = $$props['aria-label'];\n\n  $: classes = classnames(\n    className,\n    { close },\n    close || 'btn',\n    close || `btn${outline ? '-outline' : ''}-${color}`,\n    size ? `btn-${size}` : false,\n    block ? 'btn-block' : false,\n    { active }\n  );\n\n  $: defaultAriaLabel = close ? 'Close' : null;\n</script>\n\n{#if href}\n  <a\n    {...$$restProps}\n    class={classes}\n    {disabled}\n    on:click\n    {href}\n    aria-label={ariaLabel || defaultAriaLabel}\n    {style}>\n    {#if children}\n      {children}\n    {:else}\n      <slot />\n    {/if}\n  </a>\n{:else}\n  <button\n    {...$$restProps}\n    class={classes}\n    {disabled}\n    on:click\n    {value}\n    aria-label={ariaLabel || defaultAriaLabel}\n    {style}>\n    <slot>\n      {#if close}\n        <span aria-hidden=\"true\">×</span>\n      {:else if children}\n        {children}\n      {:else}\n        <slot />\n      {/if}\n    </slot>\n  </button>\n{/if}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let tabs = false;\n  export let pills = false;\n  export let vertical = false;\n  export let horizontal = '';\n  export let justified = false;\n  export let fill = false;\n  export let navbar = false;\n  export let card = false;\n\n  function getVerticalClass(vertical) {\n    if (vertical === false) {\n      return false;\n    } else if (vertical === true || vertical === 'xs') {\n      return 'flex-column';\n    }\n    return `flex-${vertical}-column`;\n  }\n\n  $: classes = classnames(\n    className,\n    navbar ? 'navbar-nav' : 'nav',\n    horizontal ? `justify-content-${horizontal}` : false,\n    getVerticalClass(vertical),\n    {\n      'nav-tabs': tabs,\n      'card-header-tabs': card && tabs,\n      'nav-pills': pills,\n      'card-header-pills': card && pills,\n      'nav-justified': justified,\n      'nav-fill': fill\n    }\n  );\n</script>\n\n<ul {...$$restProps} class={classes}>\n  <slot />\n</ul>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let light = false;\n  export let dark = false;\n  export let fixed = '';\n  export let sticky = '';\n  export let color = '';\n  export let expand = false || '';\n\n  function getExpandClass(expand) {\n    if (expand === false) {\n      return false;\n    } else if (expand === true || expand === 'xs') {\n      return 'navbar-expand';\n    }\n\n    return `navbar-expand-${expand}`;\n  }\n\n  $: classes = classnames(className, 'navbar', getExpandClass(expand), {\n    'navbar-light': light,\n    'navbar-dark': dark,\n    [`bg-${color}`]: color,\n    [`fixed-${fixed}`]: fixed,\n    [`sticky-${sticky}`]: sticky\n  });\n</script>\n\n<nav {...$$restProps} class={classes}>\n  <slot />\n</nav>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let active = false;\n\n  $: classes = classnames(className, 'nav-item', active ? 'active' : false);\n</script>\n\n<li {...$$restProps} class={classes}>\n  <slot />\n</li>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let disabled = false;\n  export let active = false;\n  export let href = '#';\n\n  $: classes = classnames(className, 'nav-link', {\n    disabled,\n    active\n  });\n\n  function handleClick(e) {\n    if (disabled) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n      return;\n    }\n\n    if (href === '#') {\n      e.preventDefault();\n    }\n  }\n</script>\n\n<a {...$$restProps} {href} on:click on:click={handleClick} class={classes}>\n  <slot />\n</a>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let href = '/';\n\n  $: classes = classnames(className, 'navbar-brand');\n</script>\n\n<a {...$$restProps} class={classes} {href} on:click>\n  <slot />\n</a>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let size = '';\n  export let bordered = false;\n  export let borderless = false;\n  export let striped = false;\n  export let dark = false;\n  export let hover = false;\n  export let responsive = false;\n\n  $: classes = classnames(\n    className,\n    'table',\n    size ? 'table-' + size : false,\n    bordered ? 'table-bordered' : false,\n    borderless ? 'table-borderless' : false,\n    striped ? 'table-striped' : false,\n    dark ? 'table-dark' : false,\n    hover ? 'table-hover' : false\n  );\n\n  $: responsiveClassName =\n    responsive === true ? 'table-responsive' : `table-responsive-${responsive}`;\n</script>\n\n{#if responsive}\n  <div class={responsiveClassName}>\n    <table {...$$restProps} class={classes}>\n      <slot />\n    </table>\n  </div>\n{:else}\n  <table {...$$restProps} class={classes}>\n    <slot />\n  </table>\n{/if}\n","<script context=\"module\">\nimport {readable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\nimport {wrap as _wrap} from './wrap'\n\n/**\n * Wraps a component to add route pre-conditions.\n * @deprecated Use `wrap` from `svelte-spa-router/wrap` instead. This function will be removed in a later version.\n * \n * @param {SvelteComponent} component - Svelte component for the route\n * @param {object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...function(RouteDetail): boolean} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(component, userData, ...conditions) {\n    // Use the new wrap method and show a deprecation warning\n    // eslint-disable-next-line no-console\n    console.warn('Method `wrap` from `svelte-spa-router` is deprecated and will be removed in a future version. Please use `svelte-spa-router/wrap` instead. See http://bit.ly/svelte-spa-router-upgrading')\n    return _wrap({\n        component,\n        userData,\n        conditions\n    })\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    // Note: this will include scroll state in history even when restoreScrollState is false\n    history.replaceState({scrollX: window.scrollX, scrollY: window.scrollY}, undefined, undefined)      \n    window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function pop() {\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    window.history.back()\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    const dest = (location.charAt(0) == '#' ? '' : '#') + location\n    try {\n        window.history.replaceState(undefined, undefined, dest)\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n    }\n\n    // The method above doesn't trigger the hashchange event, so let's do that manually\n    window.dispatchEvent(new Event('hashchange'))\n}\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string} hrefVar - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n */\nexport function link(node, hrefVar) {\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, hrefVar || node.getAttribute('href'))\n\n    return {\n        update(updated) {\n            updateLink(node, updated)\n        }\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, href) {\n    // Destination must start with '/'\n    if (!href || href.length < 1 || href.charAt(0) != '/') {\n        throw Error('Invalid value for \"href\" attribute: ' + href)\n    }\n\n    // Add # to the href attribute\n    node.setAttribute('href', '#' + href)\n    node.addEventListener('click', scrollstateHistoryHandler)\n}\n\n/**\n * The handler attached to an anchor tag responsible for updating the\n * current history state with the current scroll state\n *\n * @param {HTMLElementEventMap} event - an onclick event attached to an anchor tag\n */\nfunction scrollstateHistoryHandler(event) {\n    // Prevent default anchor onclick behaviour\n    event.preventDefault()\n    const href = event.currentTarget.getAttribute('href')\n    // Setting the url (3rd arg) to href will break clicking for reasons, so don't try to do that\n    history.replaceState({scrollX: window.scrollX, scrollY: window.scrollY}, undefined, undefined)\n    // This will force an update as desired, but this time our scroll state will be attached\n    window.location.hash = href\n}\n</script>\n\n{#if componentParams}\n    <svelte:component\n    this=\"{component}\"\n    params=\"{componentParams}\"\n    on:routeEvent\n    {...props}\n    />\n{:else}\n    <svelte:component\n    this=\"{component}\"\n    on:routeEvent\n    {...props}\n    />\n{/if}\n\n<script>\nimport {createEventDispatcher, afterUpdate} from 'svelte'\nimport regexparam from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * If set to true, the router will restore scroll positions on back navigation\n * and scroll to top on forward navigation.\n */\nexport let restoreScrollState = false\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent|WrappedComponent} component - Svelte component for the route, optionally wrapped\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument - strings must start with / or *')\n        }\n\n        const {pattern, keys} = regexparam(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.component\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n            this.props = component.props || {}\n        }\n        else {\n            // Convert the component to a function that returns a Promise, to normalize it\n            this.component = () => Promise.resolve(component)\n            this.conditions = []\n            this.props = {}\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, check if it matches the start of the path.\n        // If not, bail early, else remove it before we run the matching.\n        if (prefix) {\n            if (typeof prefix == 'string') {\n                if (path.startsWith(prefix)) {\n                    path = path.substr(prefix.length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n            else if (prefix instanceof RegExp) {\n                const match = path.match(prefix)\n                if (match && match[0]) {\n                    path = path.substr(match[0].length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            // In the match parameters, URL-decode all values\n            try {\n                out[this._keys[i]] = decodeURIComponent(matches[i + 1] || '') || null\n            }\n            catch (e) {\n                out[this._keys[i]] = null\n            }\n            i++\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoading`, `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {string|RegExp} route - Route matched as defined in the route definition (could be a string or a reguar expression object)\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {object} [userData] - Custom data passed by the user\n     * @property {SvelteComponent} [component] - Svelte component (only in `routeLoaded` events)\n     * @property {string} [name] - Name of the Svelte component (only in `routeLoaded` events)\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {bool} Returns true if all the conditions succeeded\n     */\n    async checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!(await this.conditions[i](detail))) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\nlet props = {}\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nasync function dispatchNextTick(name, detail) {\n    // Execute this code when the current call stack is complete\n    await tick()\n    dispatch(name, detail)\n}\n\n// If this is set, then that means we have popped into this var the state of our last scroll position\nlet previousScrollState = null\n\n// Update history.scrollRestoration depending on restoreScrollState\n$: history.scrollRestoration = restoreScrollState ? 'manual' : 'auto'\n\nif (restoreScrollState) {\n    window.addEventListener('popstate', (event) => {\n        // If this event was from our history.replaceState, event.state will contain\n        // our scroll history. Otherwise, event.state will be null (like on forward\n        // navigation)\n        if (event.state && event.state.scrollY) {\n            previousScrollState = event.state\n        }\n        else {\n            previousScrollState = null\n        }\n    })\n\n    afterUpdate(() => {\n        // If this exists, then this is a back navigation: restore the scroll position\n        if (previousScrollState) {\n            window.scrollTo(previousScrollState.scrollX, previousScrollState.scrollY)\n        }\n        else {\n            // Otherwise this is a forward navigation: scroll to top\n            window.scrollTo(0, 0)\n        }\n    })\n}\n\n// Always have the latest value of loc\nlet lastLoc = null\n\n// Current object of the component loaded\nlet componentObj = null\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n// Do not use the $: syntax because it gets triggered by too many things\nloc.subscribe(async (newLoc) => {\n    lastLoc = newLoc\n\n    // Find a route matching the location\n    let i = 0\n    while (i < routesList.length) {\n        const match = routesList[i].match(newLoc.location)\n        if (!match) {\n            i++\n            continue\n        }\n\n        const detail = {\n            route: routesList[i].path,\n            location: newLoc.location,\n            querystring: newLoc.querystring,\n            userData: routesList[i].userData\n        }\n\n        // Check if the route can be loaded - if all conditions succeed\n        if (!(await routesList[i].checkConditions(detail))) {\n            // Don't display anything\n            component = null\n            componentObj = null\n            // Trigger an event to notify the user, then exit\n            dispatchNextTick('conditionsFailed', detail)\n            return\n        }\n        \n        // Trigger an event to alert that we're loading the route\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoading', Object.assign({}, detail))\n\n        // If there's a component to show while we're loading the route, display it\n        const obj = routesList[i].component\n        // Do not replace the component if we're loading the same one as before, to avoid the route being unmounted and re-mounted\n        if (componentObj != obj) {\n            if (obj.loading) {\n                component = obj.loading\n                componentObj = obj\n                componentParams = obj.loadingParams\n                props = {}\n\n                // Trigger the routeLoaded event for the loading component\n                // Create a copy of detail so we don't modify the object for the dynamic route (and the dynamic route doesn't modify our object too)\n                dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n                    component: component,\n                    name: component.name\n                }))\n            }\n            else {\n                component = null\n                componentObj = null\n            }\n\n            // Invoke the Promise\n            const loaded = await obj()\n\n            // Now that we're here, after the promise resolved, check if we still want this component, as the user might have navigated to another page in the meanwhile\n            if (newLoc != lastLoc) {\n                // Don't update the component, just exit\n                return\n            }\n\n            // If there is a \"default\" property, which is used by async routes, then pick that\n            component = (loaded && loaded.default) || loaded\n            componentObj = obj\n        }\n\n        // Set componentParams only if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n        // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n        if (match && typeof match == 'object' && Object.keys(match).length) {\n            componentParams = match\n        }\n        else {\n            componentParams = null\n        }\n\n        // Set static props, if any\n        props = routesList[i].props\n\n        // Dispatch the routeLoaded event then exit\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n            component: component,\n            name: component.name\n        }))\n        return\n    }\n\n    // If we're still here, there was no match, so show the empty component\n    component = null\n    componentObj = null\n})\n</script>\n","export default function (str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n","<script>\r\n    import{ \r\n        onMount\r\n\r\n    } from \"svelte\";\r\n\r\n    import Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\timport { Alert } from 'sveltestrap';\r\n\r\n    let LifeExpectancyStats = [];\r\n    let newLife = {\r\n        country:\"\",\r\n        province:\"\",\r\n        year:\"\",\r\n        lifeExpectancyWoman:\"\",\r\n        lifeExpectancyMan: \"\",\r\n        averageLifeExpectancy:\"\"\r\n\t}\r\n    let checkMSG = \"\";\r\n    let visible = false;\r\n    let color = \"danger\";\r\n    let page = 1;\r\n    let totaldata=3; // Número total de los datos\r\n\r\n    onMount(getLife);\r\n\r\n\r\n    //Get initialData\r\n\r\n    async function getLifeExpectancy() {\r\n \r\n        console.log(\"Fetching life data...\");\r\n        await fetch(\"/api/v1/life-expectancy-stats/loadInitialData\");\r\n        const res = await fetch(\"/api/v1/life-expectancy-stats\");\r\n        if (res.ok) {\r\n            console.log(\"Ok:\");\r\n            const json = await res.json();\r\n            LifeExpectancyStats = json;\r\n            totaldata=3;\r\n            console.log(\"Received \" + LifeExpectancyStats.length + \" life data.\");\r\n            color = \"success\";\r\n            checkMSG = \"Datos cargados correctamente\";\r\n        } else {\r\n            color = \"danger\";\r\n            checkMSG= res.status + \": \" + res.statusText;\r\n            console.log(\"ERROR!\");\r\n        }\r\n        }\r\n\r\n\r\n    \r\n    //Get\r\n        async function getLife() {\r\n            console.log(\"Fetching resources...\");\r\n            const res = await fetch(\"/api/v1/life-expectancy-stats\");\r\n            if (res.ok) {\r\n                console.log(\"Ok:\");\r\n                const json = await res.json();\r\n                LifeExpectancyStats = json;\r\n                console.log(\"Received \" + LifeExpectancyStats.length + \" Life Data.\");\r\n            } else {\r\n                checkMSG= res.status + \": Recursos no encontrados \";\r\n                console.log(\"ERROR! no encontrado\");\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n    //Insert\r\n\r\n    async function insertLife(){\r\n\t\t \r\n         console.log(\"Inserting resources...\");\r\n         if (newLife.country == \"\" || newLife.province == \"\" || newLife.year == null) {\r\n             alert(\"Los campos 'País' 'Comunidad Autonoma'y 'Año' no pueden estar vacios\");\r\n         } else{\r\n             const res = await fetch(\"/api/v1/life-expectancy-stats\",{\r\n                 method:\"POST\",\r\n                 body:JSON.stringify(newLife),\r\n                 headers:{\r\n                     \"Content-Type\": \"application/json\"\r\n                 }\r\n             }).then(function (res) {\r\n                 visible=true;\r\n                 if (res.status == 201){\r\n                     getLife();\r\n                     totaldata++;\r\n                     console.log(\"Data introduced\");\r\n                     color = \"success\";\r\n                     checkMSG=\"Entrada introducida correctamente a la base de datos\";\r\n                 }else if(res.status == 400){\r\n                     console.log(\"ERROR Data was not correctly introduced\");\r\n                     color = \"danger\";\r\n                     checkMSG= \"Los datos de la entrada no fueron introducidos correctamente\";\r\n                 }else if(res.status == 409){\r\n                     console.log(\"ERROR There is already a data with that province and year in the da tabase\");\r\n                     color = \"danger\";\r\n                     checkMSG= \"Ya existe una entrada en la base de datos con la provincia y el año introducido\";\r\n                 }\r\n             });\t\r\n         }\r\n     }\r\n\r\n\r\n    //EDIT\r\n\r\n    async function editLife(province, year){\r\n\r\n            //Comprobamos que el año y la fecha no estén vacíos, el string vacio no es null\r\n                if (newLife.province == \"\" || newLife.year == null) {\r\n                alert(\"Los campos 'Comunidad Autonoma'y 'Año' no pueden estar vacios\");\r\n                }else if (province != newLife.province || year != newLife.year){\r\n                alert(\"Los campos 'Comunidad Autónoma' y 'Año' no pueden ser distintos\");\r\n                }else{\r\n                \r\n                console.log(\"Editing resources...\");\r\n                const res = await fetch(\"/api/v1/life-expectancy-stats/\" + province + \"/\" + year, {\r\n                        method:\"PUT\",\r\n                        body:JSON.stringify(newLife),\r\n                        headers:{\r\n                            \"Content-Type\": \"application/json\"\r\n                        }\r\n                    }).then(function (res) {\r\n                        visible=true;\r\n                        if (res.status == 200){\r\n                            console.log(\"Data updated\");\r\n                            getLife();\r\n                            color = \"success\";\r\n                            checkMSG =\"Entrada modificada correctamente en la base de datos\";\r\n                        }else if(res.status == 400){\r\n                            console.log(\"ERROR Data was not correctly introduced\");\r\n                            color = \"danger\";\r\n                            checkMSG= \"Los datos de la entrada no fueron introducidos correctamente\";\r\n                        }else if(res.status == 409){\r\n                            console.log(\"ERROR There is already a data with that province and year in the da tabase\");\r\n                            color = \"danger\";\r\n                            checkMSG= \"Ya existe una entrada en la base de datos con los datos introducidos\";\r\n                        }\r\n                    });\t\r\n                }\r\n            }\r\n\r\n\r\n     \r\n\r\n     //Delete\r\n\r\n     async function deleteLife(province, year) {\r\n        const res = await fetch(\"/api/v1/life-expectancy-stats/\" + province + \"/\" + year, {\r\n            method: \"DELETE\"\r\n        }).then(function (res) {\r\n            visible = true;\r\n            getLife();      \r\n            if (res.status==200) {\r\n                totaldata--;\r\n                color = \"success\";\r\n                checkMSG = \"Recurso \"+province+\" \"+year+ \" borrado correctamente\";\r\n                console.log(\"Deleted \" + province);            \r\n            } else if (res.status==404) {\r\n                color = \"danger\";\r\n                checkMSG = \"No se ha encontrado el objeto \" + province;\r\n                console.log(\"Resource NOT FOUND\");            \r\n            } else {\r\n                color = \"danger\";\r\n                checkMSG= res.status + \": \" + res.statusText;\r\n                console.log(\"ERROR!\");\r\n            }      \r\n        });\r\n    }\r\n\r\n        //DELETE ALL\r\n        async function deleteALL() {\r\n\t\tconsole.log(\"Deleting life stats data...\");\r\n\t\tif (confirm(\"¿Está seguro de que desea eliminar todas las entradas?\")){\r\n\t\t\tconsole.log(\"Deleting all life stats data...\");\r\n\t\t\tconst res = await fetch(\"/api/v1/life-expectancy-stats/\", {\r\n\t\t\t\tmethod: \"DELETE\"\r\n\t\t\t}).then(function (res) {\r\n                visible=true;\r\n\t\t\t\tif (res.ok && totaldata>0){\r\n                    totaldata = 0;\r\n\t\t\t\t\tgetLife();\r\n                    color = \"success\";\r\n\t\t\t\t\tcheckMSG=\"Datos eliminados correctamente\";\r\n\t\t\t\t\tconsole.log(\"OK All data erased\");\r\n\t\t\t\t} else if (totaldata == 0){\r\n                    console.log(\"ERROR Data was not erased\");\r\n                    color = \"danger\";\r\n\t\t\t\t\tcheckMSG= \"¡No hay datos para borrar!\";\r\n                } else{\r\n\t\t\t\t\tconsole.log(\"ERROR Data was not erased\");\r\n                    color = \"danger\";\r\n\t\t\t\t\tcheckMSG= \"No se han podido eliminar los datos\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n        //SEARCH\r\n    //getNextPage\r\n    async function getNextPage() {\r\n \r\n            console.log(totaldata);\r\n            if (page+5 > totaldata) {\r\n                page = 1\r\n            } else {\r\n                page+=5\r\n            }\r\n            \r\n            visible = true;\r\n            console.log(\"Charging page... Listing since: \"+page);\r\n            const res = await fetch(\"/api/v1/life-expectancy-stats?limit=5&offset=\"+(-1+page));\r\n            //condicional imprime msg\r\n            color = \"success\";\r\n            checkMSG= (page+5 > totaldata) ? \"Mostrando elementos \"+(page)+\"-\"+totaldata : \"Mostrando elementos \"+(page)+\"-\"+(page+4);\r\n\r\n            if (totaldata == 0){\r\n                console.log(\"ERROR Data was not erased\");\r\n                color = \"danger\";\r\n                checkMSG= \"¡No hay datos!\";\r\n            }else if (res.ok) {\r\n                console.log(\"Ok:\");\r\n                const json = await res.json();\r\n                SmokerStats = json;\r\n                console.log(\"Received \" + LifeExpectancyStats.length + \" resources.\");\r\n            } else {\r\n                checkMSG= res.status + \": \" + res.statusText;\r\n                console.log(\"ERROR!\");\r\n            }\r\n        }\r\n\r\n            //getPreviewPage\r\n            async function getPreviewPage() {\r\n\r\n                console.log(totaldata);\r\n                if (page-5 > 1) {\r\n                    page-=5; \r\n                } else page = 1\r\n\r\n                visible = true;\r\n                console.log(\"Charging page... Listing since: \"+page);\r\n                const res = await fetch(\"/api/v1/life-expectancy-stats?limit=5&offset=\"+(-1+page));\r\n                color = \"success\";\r\n                errorMSG= (page+5 > totaldata) ? \"Mostrando elementos \"+(page)+\"-\"+totaldata : \"Mostrando elementos \"+(page)+\"-\"+(page+4);\r\n\r\n                if (totaldata == 0){\r\n                    console.log(\"ERROR Data was not erased\");\r\n                    color = \"danger\";\r\n                    errorMSG= \"¡No hay datos!\";\r\n                }else if (res.ok) {\r\n                    console.log(\"Ok:\");\r\n                    const json = await res.json();\r\n                    SmokerStats = json;\r\n                    console.log(\"Received \"+LifeExpectancyStats.length+\" resources.\");\r\n                } else {\r\n                    errorMSG= res.status+\": \"+res.statusText;\r\n                    console.log(\"ERROR!\");\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<main>\r\n\r\n        <h1 style =\"text-align: center;\">Tabla de datos de Esperanza de vida</h1>\r\n\r\n        {#await LifeExpectancyStats}\r\n            Loading life stats data...\r\n        {:then LifeExpectancyStats}\r\n        \r\n        <Alert color={color} isOpen={visible} toggle={() => (visible = false)}>\r\n            {#if checkMSG}\r\n                {checkMSG}\r\n            {/if}\r\n        </Alert>\r\n\r\n        <Table bordered responsive> \r\n            <thead>\r\n                <tr>\r\n                    <th>Pais</th>\r\n                    <th>Comunidad autonoma</th>\r\n                    <th>Año</th>\r\n                    <th>Esperanza de vida en mujeres</th>\r\n                    <th>Esperanza de vida en hombre</th>\r\n                    <th>Esperanza de vida media</th>\r\n                    <th colspan=\"2\">Acciones</th>\r\n                </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td><input type = \"text\" placeholder=\"España\" bind:value=\"{newLife.country}\"></td>\r\n                <td><input type = \"text\" placeholder=\"Cataluña\" bind:value=\"{newLife.province}\"></td> \r\n                <td><input type = \"text\" placeholder=\"2017\" bind:value=\"{newLife.year}\"></td> \r\n                <td><input type = \"number\" placeholder=\"80\" bind:value=\"{newLife.lifeExpectancyWoman}\"></td>    \r\n                <td><input type = \"number\" placeholder=\"81.4\" bind:value=\"{newLife.lifeExpectancyMan}\"></td>  \r\n                <td><input type = \"number\" placeholder=\"80.8\" bind:value=\"{newLife.averageLifeExpectancy}\"></td>  \r\n                <td colspan=\"2\" style=\"text-align: center;\"><Button outline color=\"primary\" on:click={insertLife}>Insertar</Button></td>  \r\n            </tr>\r\n\r\n        {#each LifeExpectancyStats as life}\r\n            <tr>\r\n                \r\n                <td>{life.country}</td>\r\n                <td><a href=\"api/v1/life-expectancy-stats/{life.province}/{life.year}\">{life.province}</a></td>\r\n                <td>{life.year}</td>\r\n                <td>{life.lifeExpectancyWoman}</td>\r\n                <td>{life.lifeExpectancyMan}</td>\r\n                <td>{life.averageLifeExpectancy}</td>\r\n                <td><Button outline color=\"danger\" on:click=\"{deleteLife(life.province, life.year)}\">Borrar</Button></td>\r\n                <td><Button outline color=\"primary\" on:click=\"{editLife(life.province, life.year)}\">Editar</Button></td>\r\n            </tr>\r\n                \r\n        {/each}\r\n        </tbody>\r\n        </Table>\r\n        <Button color=\"success\" on:click=\"{getLifeExpectancy}\">\r\n            Cargar datos inciales\r\n        </Button>\r\n        <Button color=\"danger\" on:click=\"{deleteALL}\">\r\n            Eliminar todo\r\n        </Button>\r\n        <Button outline color=\"primary\" on:click=\"{getPreviewPage}\">\r\n           Atrás\r\n        </Button>\r\n        <Button outline color=\"primary\" on:click=\"{getNextPage}\">\r\n            Siguiente\r\n         </Button>\r\n\r\n    {/await}\r\n</main>\r\n\r\n\r\n<style>\r\n\r\n</style>","<script>\r\n\r\n    import{\r\n        onMount\r\n    } from \"svelte\";\r\n\r\n    import Table from \"sveltestrap/src/Table.svelte\";\r\n\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n    import { Alert } from 'sveltestrap';\r\n\r\n    let visible = false;\r\n    let color = \"danger\";\r\n    let page = 1;\r\n    let totaldata=5; // Número total de los datos\r\n    let errorMSG = \"\";\r\n\r\n    var BASE_ALCOHOL_PATH = \"/api/v1/alcohol-consumption-stats/\";\r\n\r\n    let alcoholStats = [];\r\n    let newAlcohol = {\r\n        country:\"\",\r\n        year:\"\",\r\n        ageRange:\"\",\r\n        alcoholPrematureDeath: \"\",\r\n        prevalenceOfAlcoholUseDisorder:\"\"\r\n\t}\r\n\r\n    //GET INITIALDATA\r\n    async function loadInitialData() {\r\n        console.log(\"Fetching employment data...\");\r\n        await fetch(\"/api/v1/alcohol-consumption-stats/loadInitialData\");\r\n        const res = await fetch(\"/api/v1/alcohol-consumption-stats?limit=3&offset=0\");\r\n            if (res.ok) {\r\n                console.log(\"Ok:\");\r\n                const json = await res.json();\r\n                alcoholStats = json;\r\n                totaldata=13;\r\n                console.log(\"Received \" + alcoholStats.length + \" alcohol data.\");\r\n                color = \"success\";\r\n                errorMSG = \"Datos cargados correctamente\";\r\n            } else {\r\n                color = \"danger\";\r\n                errorMSG= res.status + \": \" + res.statusText;\r\n                console.log(\"ERROR!\");\r\n            }\r\n    }\r\n    //Actualizarsssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\r\n\r\n    async function updateAlcohol(country, year, ageRange){\r\n        if (newAlcohol.year == \"\" || newAlcohol.year == null || newAlcohol.country == \"\" || newAlcohol.ageRange == \"\") {\r\n            alert(\"Los campos País, Año y Rango de edad no pueden estar vacíos\");\r\n        }else if (country != newAlcohol.country || year != newAlcohol.year || ageRange != newAlcohol.ageRange){\r\n            alert(\"Los campos País, Año y Rango de edad no pueden ser distintos\");\r\n        }else{\r\n            \r\n            console.log(\"Editing alcohol data...\");\r\n            const res = await fetch(BASE_ALCOHOL_PATH + country + \"/\" + year + \"/\" + ageRange, {\r\n                    method:\"PUT\",\r\n                    body:JSON.stringify(newAlcohol),\r\n                    headers:{\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                }).then(function (res) {\r\n                    visible=true;\r\n                    if (res.status == 200){\r\n                        console.log(\"Data updated\");\r\n                        getStats();\r\n                        color = \"success\";\r\n                        checkMSG =\"Entrada modificada correctamente en la base de datos\";\r\n                    }else if(res.status == 400){\r\n                        console.log(\"ERROR Data was not correctly introduced\");\r\n                        color = \"danger\";\r\n                        checkMSG= \"Los datos de la entrada no fueron introducidos correctamente\";\r\n                    }else if(res.status == 409){\r\n                        console.log(\"ERROR There is already a data with that province and year in the da tabase\");\r\n                        color = \"danger\";\r\n                        checkMSG= \"Ya existe una entrada en la base de datos con los datos introducidos\";\r\n                    }\r\n                });\t\r\n            }\r\n    }\r\n\r\n    //INSERT\r\n    \r\n    async function insertAlcohol(){\r\n\t\t \r\n         console.log(\"Inserting alcohol data...\");\r\n         if (newAlcohol.year == \"\" || newAlcohol.year == null || newAlcohol.country == \"\" || newAlcohol.ageRange==\"\") {\r\n             alert(\"Los campos 'País' y 'Año' no pueden estar vacios\");\r\n         } else{\r\n             const res = await fetch(\"/api/v1/alcohol-consumption-stats\",{\r\n             method:\"POST\",\r\n             body:JSON.stringify(newAlcohol),\r\n             headers:{\r\n                 \"Content-Type\": \"application/json\"\r\n             }\r\n             }).then(function (res) {\r\n                 visible=true;\r\n                 if (res.status == 201){\r\n                     getStats();\r\n                     totaldata++;\r\n                     console.log(\"Data introduced\");\r\n                     color = \"success\";\r\n                     errorMSG=\"Entrada introducida correctamente a la base de datos\";\r\n                 }else if(res.status == 400){\r\n                     console.log(\"ERROR Data was not correctly introduced\");\r\n                     color = \"danger\";\r\n                     errorMSG= \"Los datos de la entrada no fueron introducidos correctamente\";\r\n                 }else if(res.status == 409){\r\n                     console.log(\"ERROR There is already a data with that province and year in the da tabase\");\r\n                     color = \"danger\";\r\n                     errorMSG= \"Ya existe una entrada en la base de datos con el país, el año y el rango de edad\";\r\n                 }\r\n             });\t\r\n         }\r\n     }\r\n\r\n    //Mostrar datos\r\n    async function getStats(){\r\n        console.log(\"Fetching stats...\");\r\n        const res= await fetch(BASE_ALCOHOL_PATH);\r\n\r\n        if(res.ok){\r\n            console.log(\"ok\");\r\n            const json= await res.json();\r\n            alcoholStats=json;\r\n            updateAgeRange=alcoholStats.ageRange;\r\n            updatePrematureDeath=alcoholStats.alcoholPrematureDeath;\r\n            updateDisorder=alcoholStats.prevalenceOfAlcoholUseDisorder;\r\n            console.log(`We have received ${alcoholStats.length} alcohol stats`);\r\n        }else{\r\n            console.log(\"Error\")\r\n        }\r\n    }\r\n\r\n    //Borrar datos\r\n    async function deleteALL() {\r\n\t\tconsole.log(\"Deleting weights data...\");\r\n\t\tif (confirm(\"¿Está seguro de que desea eliminar todas las entradas?\")){\r\n\t\t\tconsole.log(\"Deleting all weights data...\");\r\n\t\t\tconst res = await fetch(BASE_ALCOHOL_PATH, {\r\n\t\t\t\tmethod: \"DELETE\"\r\n\t\t\t}).then(function (res) {\r\n                visible=true;\r\n\t\t\t\tif (res.ok && totaldata>0){\r\n                    totaldata = 0;\r\n\t\t\t\t\tgetStats();\r\n                    color = \"success\";\r\n\t\t\t\t\terrorMSG=\"Datos eliminados correctamente\";\r\n\t\t\t\t\tconsole.log(\"OK All data erased\");\r\n\t\t\t\t} else if (totaldata == 0){\r\n                    console.log(\"ERROR Data was not erased\");\r\n                    color = \"danger\";\r\n\t\t\t\t\terrorMSG= \"¡No hay datos para borrar!\";\r\n                } else{\r\n\t\t\t\t\tconsole.log(\"ERROR Data was not erased\");\r\n                    color = \"danger\";\r\n\t\t\t\t\terrorMSG= \"No se han podido eliminar los datos\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n    //Borrar dato especifico\r\n    async function deleteSpecificAlcohol(country,ageRange, year) {\r\n        const res = await fetch(BASE_ALCOHOL_PATH + country + \"/\" + year + \"/\" + ageRange, {\r\n            method: \"DELETE\"\r\n        }).then(function (res) {\r\n            visible = true;\r\n            getStats();      \r\n            if (res.status==200) {\r\n                totaldata--;\r\n                color = \"success\";\r\n                errorMSG = \"Recurso \"+province+\" \"+year+ + \" \" + ageRange+ \" borrado correctamente\";\r\n                console.log(\"Deleted \" + country);            \r\n            } else if (res.status==404) {\r\n                color = \"danger\";\r\n                errorMSG = \"No se ha encontrado el objeto\" + country;\r\n                console.log(\"STAT NOT FOUND\");            \r\n            } else {\r\n                color = \"danger\";\r\n                errorMSG= res.status + \": \" + res.statusText;\r\n                console.log(\"ERROR!\");\r\n            }      \r\n        });\r\n    }\r\n\r\n        //sigueinte pagina\r\n        async function getNextPage() {\r\n \r\n            console.log(totaldata);\r\n            if (page+5 > totaldata) {\r\n                page = 1\r\n            } else {\r\n                page+=5\r\n            }\r\n            \r\n            visible = true;\r\n            console.log(\"Charging page... Listing since: \"+page);\r\n            const res = await fetch(\"/api/v1/alcohol-consumption-stats?limit=3&offset=\"+(-1+page));\r\n            color = \"success\";\r\n            errorMSG= (page+5 > totaldata) ? \"Mostrando elementos \"+(page)+\"-\"+totaldata : \"Mostrando elementos \"+(page)+\"-\"+(page+4);\r\n\r\n            if (totaldata == 0){\r\n                console.log(\"ERROR Data was not erased\");\r\n                color = \"danger\";\r\n                errorMSG= \"¡No hay datos!\";\r\n            }else if (res.ok) {\r\n                console.log(\"Ok:\");\r\n                const json = await res.json();\r\n                SmokerStats = json;\r\n                console.log(\"Received \" + alcoholStats.length + \" resources.\");\r\n            } else {\r\n                errorMSG= res.status + \": \" + res.statusText;\r\n                console.log(\"ERROR!\");\r\n            }\r\n        }\r\n            //getPreviewPage\r\n            async function getPreviewPage() {\r\n\r\n                console.log(totaldata);\r\n                if (page-5 > 1) {\r\n                    page-=5; \r\n                } else page = 1\r\n\r\n                visible = true;\r\n                console.log(\"Charging page... Listing since: \"+page);\r\n                const res = await fetch(\"/api/v1/alcohol-consumption-stats?limit=5&offset=\"+(-1+page));\r\n                color = \"success\";\r\n                errorMSG= (page+5 > totaldata) ? \"Mostrando elementos \"+(page)+\"-\"+totaldata : \"Mostrando elementos \"+(page)+\"-\"+(page+4);\r\n\r\n                if (totaldata == 0){\r\n                    console.log(\"ERROR Data was not erased\");\r\n                    color = \"danger\";\r\n                    errorMSG= \"¡No hay datos!\";\r\n                }else if (res.ok) {\r\n                    console.log(\"Ok:\");\r\n                    const json = await res.json();\r\n                    SmokerStats = json;\r\n                    console.log(\"Received \"+alcoholStats.length+\" resources.\");\r\n                } else {\r\n                    errorMSG= res.status+\": \"+res.statusText;\r\n                    console.log(\"ERROR!\");\r\n                }\r\n            }\r\n\r\n    onMount(getStats);\r\n\r\n</script>\r\n\r\n<main>\r\n    <h1  style =\"text-align: center;\">Datos sobre consumo de alcohol</h1>\r\n    <br>\r\n\r\n    \r\n    {#await alcoholStats}\r\n        Loading alcohol data...\r\n    {:then alcoholStats}\r\n    \r\n    <Alert color={color} isOpen={visible} toggle={() => (visible = false)}>\r\n        {#if errorMSG}\r\n\t\t    {errorMSG}\r\n\t    {/if}\r\n    </Alert>\r\n\r\n        <Table bordered responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>País</th>\r\n                    <th>Año</th>\r\n                    <th>Rango de edad </th>\r\n                    <th>Muertes prematuras a causa del alcohol</th>\r\n                    <th>Prevalencia de trastornos por consumo de alcohol</th>\r\n                    <th colspan=\"2\">Acciones</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td><input type = \"text\" placeholder=\"España\" bind:value=\"{newAlcohol.country}\"></td>\r\n                    <td><input type = \"text\" placeholder=\"2017\" bind:value=\"{newAlcohol.year}\"></td> \r\n                    <td><input type = \"text\" placeholder=\"40-45\" bind:value=\"{newAlcohol.ageRange}\"></td> \r\n                    <td><input type = \"number\" placeholder=\"10\" bind:value=\"{newAlcohol.alcoholPrematureDeath}\"></td>    \r\n                    <td><input type = \"number\" placeholder=\"0.4\" bind:value=\"{newAlcohol.prevalenceOfAlcoholUseDisorder}\"></td>  \r\n                    <td colspan=\"2\" style=\"text-align: center;\"><Button outline color=\"primary\" on:click={insertAlcohol}>Insertar</Button></td>           \r\n                </tr>\r\n \r\n                {#each alcoholStats as stat}\r\n                    <tr>\r\n                        <td><a href=\"#/alcohol-stats/{stat.country}/{stat.year}/{stat.ageRange}\">{stat.country}</a></td>\r\n                        <td>{stat.year}</td>\r\n                        <td>{stat.ageRange}</td>\r\n                        <td>{stat.alcoholPrematureDeath}</td>\r\n                        <td>{stat.prevalenceOfAlcoholUseDisorder}</td>\r\n                        <td><Button outline color=\"danger\" on:click=\"{deleteSpecificAlcohol(stat.country, stat.ageRange,stat.year)}\">Borrar</Button></td>\r\n                        <td><Button outline color=\"primary\" on:click=\"{updateAlcohol(stat.country,stat.year,stat.ageRange)}\">Editar</Button></td>\r\n                        \r\n                    </tr>\r\n                {/each}\r\n            </tbody>\r\n        </Table>\r\n          <Button color=\"success\" on:click=\"{loadInitialData}\">\r\n            Cargar datos inciales\r\n        </Button>\r\n        <Button color=\"danger\" on:click=\"{deleteALL}\">\r\n            Eliminar todo\r\n        </Button>\r\n        <Button outline color=\"primary\" on:click=\"{getPreviewPage}\">\r\n           Atrás\r\n        </Button>\r\n        <Button outline color=\"primary\" on:click=\"{getNextPage}\">\r\n            Siguiente\r\n         </Button>\r\n         \r\n    {/await}\r\n</main>","<script>\r\n\timport { onMount } from \"svelte\";\r\n\timport Table from \"sveltestrap/src/Table.svelte\"; \r\n\timport Button from \"sveltestrap/src/Button.svelte\";\r\n\timport { Alert } from 'sveltestrap';\r\n    \r\n\t\r\n    //ALERTAS\r\n    let visible = false;\r\n    let color = \"danger\";\r\n    \r\n    //Variables\r\n    let page = 1;\r\n    let totaldata=13;\r\n    let SmokerStats = [];\r\n\tlet newSmoker = {\r\n        country: \"España\",\r\n        province: \"\",\r\n\t\tyear: \"\",\r\n\t\tdailySmoker:\"\",\r\n\t\tocasionalSmoker:\"\",\r\n\t\texSmoker:\"\",\r\n        nonSmoker:\"\"\r\n\t}\r\n    let checkMSG = \"\";\r\n    onMount(getSmoker);\r\n \r\n    //GET\r\n    async function getSmoker() {\r\n \r\n        console.log(\"Fetching smokers Data...\");\r\n        const res = await fetch(\"/api/v1/smokers-stats?limit=5&offset=0\");\r\n        if (res.ok) {\r\n            console.log(\"Ok:\");\r\n            const json = await res.json();\r\n            SmokerStats = json;\r\n            console.log(\"Received \" + SmokerStats.length + \" Smokers Data.\");\r\n        } else {\r\n            checkMSG= res.status + \": \" + res.statusText;\r\n            console.log(\"ERROR!\");\r\n        }\r\n    }\r\n \r\n    //GET INITIALDATA\r\n    async function loadInitialData() {\r\n \r\n        console.log(\"Fetching smokers data...\");\r\n        await fetch(\"/api/v1/smokers-stats/loadInitialData\");\r\n        const res = await fetch(\"/api/v1/smokers-stats?limit=5&offset=0\");\r\n        if (res.ok) {\r\n            console.log(\"Ok:\");\r\n            const json = await res.json();\r\n            SmokerStats = json;\r\n            totaldata=13;\r\n            console.log(\"Received \" + SmokerStats.length + \" Smokers data.\");\r\n            color = \"success\";\r\n            checkMSG = \"Datos cargados correctamente\";\r\n        } else {\r\n            color = \"danger\";\r\n            checkMSG= res.status + \": \" + res.statusText;\r\n            console.log(\"ERROR!\");\r\n        }\r\n    }\r\n    \r\n    //INSERT  \r\n    async function insertSmokers(){\r\n\t\t \r\n        console.log(\"Inserting smokers data...\");\r\n        //Comprobamos que el año y la fecha no estén vacíos, el string vacio no es null\r\n        if (newSmoker.year == \"\" || newSmoker.year == null || newSmoker.province == \"\") {\r\n            alert(\"Los campos 'Comunidad Autónoma' y 'Año' no pueden estar vacios\");\r\n        } else{\r\n            const res = await fetch(\"/api/v1/smokers-stats\",{\r\n                method:\"POST\",\r\n                body:JSON.stringify(newSmoker),\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            }).then(function (res) {\r\n                visible=true;\r\n                if (res.status == 201){\r\n                    getSmoker();\r\n                    totaldata++;\r\n                    console.log(\"Data introduced\");\r\n                    color = \"success\";\r\n                    checkMSG=\"Entrada introducida correctamente a la base de datos\";\r\n                }else if(res.status == 400){\r\n                    console.log(\"ERROR Data was not correctly introduced\");\r\n                    color = \"danger\";\r\n                    checkMSG= \"Los datos de la entrada no fueron introducidos correctamente\";\r\n                }else if(res.status == 409){\r\n                    console.log(\"ERROR There is already a data with that province and year in the da tabase\");\r\n                    color = \"danger\";\r\n                    checkMSG= \"Ya existe una entrada en la base de datos con la provincia y el año introducido\";\r\n                }\r\n            });\t\r\n        }\r\n    }\r\n    \r\n    //EDIT\r\n    async function editSmokers(province, year){\r\n\r\n         //Comprobamos que el año y la fecha no estén vacíos, el string vacio no es null\r\n        if (newSmoker.year == \"\" || newSmoker.year == null || newSmoker.province == \"\") {\r\n            alert(\"Los campos 'Comunidad Autónoma' y 'Año' no pueden estar vacíos\");\r\n        }else if (province != newSmoker.province || year != newSmoker.year){\r\n            alert(\"Los campos 'Comunidad Autónoma' y 'Año' no pueden ser distintos\");\r\n        }else{\r\n            \r\n            console.log(\"Editing smokers data...\");\r\n            const res = await fetch(\"/api/v1/smokers-stats/\" + province + \"/\" + year, {\r\n                    method:\"PUT\",\r\n                    body:JSON.stringify(newSmoker),\r\n                    headers:{\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                }).then(function (res) {\r\n                    visible=true;\r\n                    if (res.status == 200){\r\n                        console.log(\"Data updated\");\r\n                        getSmoker();\r\n                        color = \"success\";\r\n                        checkMSG =\"Entrada modificada correctamente en la base de datos\";\r\n                    }else if(res.status == 400){\r\n                        console.log(\"ERROR Data was not correctly introduced\");\r\n                        color = \"danger\";\r\n                        checkMSG= \"Los datos de la entrada no fueron introducidos correctamente\";\r\n                    }else if(res.status == 409){\r\n                        console.log(\"ERROR There is already a data with that province and year in the da tabase\");\r\n                        color = \"danger\";\r\n                        checkMSG= \"Ya existe una entrada en la base de datos con los datos introducidos\";\r\n                    }\r\n                });\t\r\n            }\r\n    }\r\n\r\n    //DELETE SPECIFIC\r\n    async function deleteSmokers(province, year) {\r\n        const res = await fetch(\"/api/v1/smokers-stats/\" + province + \"/\" + year, {\r\n            method: \"DELETE\"\r\n        }).then(function (res) {\r\n            visible = true;\r\n            getSmoker();      \r\n            if (res.status==200) {\r\n                totaldata--;\r\n                color = \"success\";\r\n                checkMSG = \"Recurso \"+province+\" \"+year+ \" borrado correctamente\";\r\n                console.log(\"Deleted \" + province);            \r\n            } else if (res.status==404) {\r\n                color = \"danger\";\r\n                checkMSG = \"No se ha encontrado el objeto \" + province;\r\n                console.log(\"SUICIDE NOT FOUND\");            \r\n            } else {\r\n                color = \"danger\";\r\n                checkMSG= res.status + \": \" + res.statusText;\r\n                console.log(\"ERROR!\");\r\n            }      \r\n        });\r\n    }\r\n\r\n    //DELETE ALL\r\n    async function deleteALL() {\r\n\t\tconsole.log(\"Deleting smokers data...\");\r\n\t\tif (confirm(\"¿Está seguro de que desea eliminar todas las entradas?\")){\r\n\t\t\tconsole.log(\"Deleting all smokers data...\");\r\n\t\t\tconst res = await fetch(\"/api/v1/smokers-stats/\", {\r\n\t\t\t\tmethod: \"DELETE\"\r\n\t\t\t}).then(function (res) {\r\n                visible=true;\r\n\t\t\t\tif (res.ok && totaldata>0){\r\n                    totaldata = 0;\r\n\t\t\t\t\tgetSmoker();\r\n                    color = \"success\";\r\n\t\t\t\t\tcheckMSG=\"Datos eliminados correctamente\";\r\n\t\t\t\t\tconsole.log(\"OK All data erased\");\r\n\t\t\t\t} else if (totaldata == 0){\r\n                    console.log(\"ERROR Data was not erased\");\r\n                    color = \"danger\";\r\n\t\t\t\t\tcheckMSG= \"¡No hay datos para borrar!\";\r\n                } else{\r\n\t\t\t\t\tconsole.log(\"ERROR Data was not erased\");\r\n                    color = \"danger\";\r\n\t\t\t\t\tcheckMSG= \"No se han podido eliminar los datos\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n    \r\n    \r\n    //SEARCH\r\n    //getNextPage\r\n    async function getNextPage() {\r\n \r\n        console.log(totaldata);\r\n        if (page+5 > totaldata) {\r\n            page = 1\r\n        } else {\r\n            page+=5\r\n        }\r\n        \r\n        visible = true;\r\n        console.log(\"Charging page... Listing since: \"+page);\r\n        const res = await fetch(\"/api/v1/smokers-stats?limit=5&offset=\"+(-1+page));\r\n        //condicional imprime msg\r\n        color = \"success\";\r\n        checkMSG= (page+5 > totaldata) ? \"Mostrando elementos \"+(page)+\"-\"+totaldata : \"Mostrando elementos \"+(page)+\"-\"+(page+4);\r\n\r\n        if (totaldata == 0){\r\n            console.log(\"ERROR Data was not erased\");\r\n            color = \"danger\";\r\n\t\t\tcheckMSG= \"¡No hay datos!\";\r\n        }else if (res.ok) {\r\n            console.log(\"Ok:\");\r\n            const json = await res.json();\r\n            SmokerStats = json;\r\n            console.log(\"Received \" + SmokerStats.length + \" resources.\");\r\n        } else {\r\n            checkMSG= res.status + \": \" + res.statusText;\r\n            console.log(\"ERROR!\");\r\n        }\r\n    }\r\n\r\n    //getPreviewPage\r\n    async function getPreviewPage() {\r\n\r\n        console.log(totaldata);\r\n        if (page-5 > 1) {\r\n            page-=5; \r\n        } else page = 1\r\n\r\n        visible = true;\r\n        console.log(\"Charging page... Listing since: \"+page);\r\n        const res = await fetch(\"/api/v1/smokers-stats?limit=5&offset=\"+(-1+page));\r\n        //condicional imprime msg\r\n        color = \"success\";\r\n        checkMSG= (page+5 > totaldata) ? \"Mostrando elementos \"+(page)+\"-\"+totaldata : \"Mostrando elementos \"+(page)+\"-\"+(page+4);\r\n\r\n        if (totaldata == 0){\r\n            console.log(\"ERROR Data was not erased\");\r\n            color = \"danger\";\r\n\t\t\tcheckMSG= \"¡No hay datos!\";\r\n        }else if (res.ok) {\r\n            console.log(\"Ok:\");\r\n            const json = await res.json();\r\n            SmokerStats = json;\r\n            console.log(\"Received \"+SmokerStats.length+\" resources.\");\r\n        } else {\r\n            checkMSG= res.status+\": \"+res.statusText;\r\n            console.log(\"ERROR!\");\r\n        }\r\n    }\r\n    \r\n</script>\r\n\r\n<main>\r\n    <h1 style =\"text-align: center;\">Administración de datos de fumadores</h1>\r\n\r\n    {#await SmokerStats}\r\n        Loading smokers data...\r\n    {:then SmokerStats}\r\n    \r\n    <Alert color={color} isOpen={visible} toggle={() => (visible = false)}>\r\n        {#if checkMSG}\r\n\t\t    {checkMSG}\r\n\t    {/if}\r\n    </Alert>\r\n\r\n        <Table bordered responsive>\r\n            <thead>\r\n                <tr style =\"text-align: center;\">\r\n                    <th>Comunidad Autónoma</th>\r\n                    <th>Año</th>\r\n                    <th>Fumadores diarios</th>\r\n                    <th>Fumadores ocasionales</th>\r\n                    <th>Ex-fumadores</th>\r\n                    <th>No fumadores</th>\r\n                    <th colspan=\"2\">Acciones</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td><input type = \"text\" placeholder=\"Babylon\" bind:value=\"{newSmoker.province}\"></td>\r\n                    <td><input type = \"number\" placeholder=\"2075\" bind:value=\"{newSmoker.year}\"></td>\r\n                    <td><input type = \"number\" placeholder=\"0000\" bind:value=\"{newSmoker.dailySmoker}\"></td> \r\n                    <td><input type = \"number\" placeholder=\"0000\" bind:value=\"{newSmoker.ocasionalSmoker}\"></td>    \r\n                    <td><input type = \"number\" placeholder=\"0000\" bind:value=\"{newSmoker.exSmoker}\"></td>  \r\n                    <td><input type = \"number\" placeholder=\"0000\" bind:value=\"{newSmoker.nonSmoker}\"></td>  \r\n                    <td colspan=\"2\" style=\"text-align: center;\"><Button outline color=\"primary\" on:click={insertSmokers}>Insertar</Button></td>          \r\n                </tr>\r\n \r\n                {#each SmokerStats as sc}\r\n                    <tr>\r\n                        <td><a href=\"api/v1/smokers-stats/{sc.province}/{sc.year}\">{sc.province}</a></td>\r\n                        <td>{sc.year}</td>\r\n                        <td>{sc.dailySmoker}</td>\r\n                        <td>{sc.ocasionalSmoker}</td>\r\n                        <td>{sc.exSmoker}</td>\r\n                        <td>{sc.nonSmoker}</td>\r\n                        <td><Button outline color=\"danger\" on:click=\"{deleteSmokers(sc.province, sc.year)}\">Borrar</Button></td>\r\n                        <td><Button outline color=\"primary\" on:click=\"{editSmokers(sc.province, sc.year)}\">Editar</Button></td>\r\n                    </tr>\r\n                {/each}\r\n            </tbody>\r\n        </Table>\r\n          <Button color=\"success\" on:click=\"{loadInitialData}\">\r\n            Cargar datos inciales\r\n        </Button>\r\n        <Button color=\"danger\" on:click=\"{deleteALL}\">\r\n            Eliminar todo\r\n        </Button>\r\n        <Button outline color=\"primary\" on:click=\"{getPreviewPage}\">\r\n           Atrás\r\n        </Button>\r\n        <Button outline color=\"primary\" on:click=\"{getNextPage}\">\r\n            Siguiente\r\n         </Button>\r\n         \r\n    {/await}\r\n</main>","<script>\r\n\timport { onMount } from \"svelte\";\r\n\timport Table from \"sveltestrap/src/Table.svelte\"; \r\n\timport Button from \"sveltestrap/src/Button.svelte\";\r\n\timport { Pagination, PaginationItem, PaginationLink } from 'sveltestrap';\r\n\timport { Form, FormGroup, FormText, Input, Label } from 'sveltestrap';\r\n\timport { Alert } from 'sveltestrap';\r\n    import { UncontrolledCollapse, Collapse, CardBody, Card } from \"sveltestrap\";\r\n\timport { pop } from \"svelte-spa-router\";\r\n    import { get } from \"svelte/store\";\r\n\r\n    var BASE_WEIGHTS_PATH = \"/api/v2/table-weights-stats\";\r\n    let weightsStats = [];\r\n    let newWeight = {\r\n        provinces: \"\",\r\n        year: \"\",\r\n        normal_weight: \"\",\r\n        overweight: \"\",\r\n        obesity:\"\"\r\n    }\r\n    let isOpen = false;\r\n    let busquedas = BASE_WEIGHTS_PATH;\r\n    let visible = false;\r\n    let color = \"danger\";\r\n    let page = 1;\r\n    let totaldata = weightsStats.length;\r\n    let errorMSG = \"\";\r\n    let okayMSG = \"\";    \r\n    onMount(getStats);\r\n\r\n    //Función LOADINITIAL para generar datos iniciales\r\n    async function loadInitialData() { \r\n        console.log(\"Fetching data...\");\r\n        await fetch(BASE_WEIGHTS_PATH + \"/loadInitialData\");\r\n        const res = await fetch(BASE_WEIGHTS_PATH + \"?limit=100&offset=0\");\r\n        if (res.ok) {\r\n            console.log(\"Ok:\");\r\n            const json = await res.json();\r\n            weightsStats = json;\r\n            totaldata = weightsStats.length;\r\n            console.log(\"Received \" + weightsStats.length + \" datas.\");\r\n            color = \"success\";\r\n            errorMSG = \"Datos cargados correctamente\";\r\n        } else {\r\n            color = \"danger\";\r\n            errorMSG= res.status + \": \" + res.statusText;\r\n            console.log(\"ERROR!\");\r\n        }\r\n    }\r\n\r\n    //Función GET para mostrar todos los datos\r\n    async function getStats(){\r\n        console.log(\"Fetching stats...\");\r\n        const res= await fetch(BASE_WEIGHTS_PATH + \"?limit=100&offset=0\");\r\n        if(res.ok){\r\n            console.log(\"ok\");\r\n            const json= await res.json();\r\n            weightsStats=json;\r\n            console.log(`We have received ${weightsStats.length} alcohol stats`);\r\n        }else{\r\n            console.log(\"Error\")\r\n        }\r\n    }\r\n\r\n    //Función DELETE para eliminar todos los datos\r\n    async function deleteALL() {\r\n\t\tconsole.log(\"Deleting weights data...\");\r\n\t\tif (confirm(\"¿Está seguro de que desea eliminar todas las entradas?\")){\r\n\t\t\tconsole.log(\"Deleting all weights data...\");\r\n\t\t\tconst res = await fetch(BASE_WEIGHTS_PATH, {\r\n\t\t\t\tmethod: \"DELETE\"\r\n\t\t\t}).then( (res) => {\r\n                visible = true;\r\n                if(res.ok && totaldata > 0){\r\n                    totaldata = 0;\r\n                    getStats();\r\n                    color = \"succes\"; \r\n                    errorMSG = \"Datos eliminados correctamente\";\r\n                    console.log(\"OK all data have been deleted\");\r\n                }else if(totaldata == 0){\r\n                    console.log(\"error\");\r\n                    color = \"danger\";\r\n                    errorMSG = \"No hay datos para borrar\";\r\n                }else{\r\n                    console.log(\"error\");\r\n                    color = \"danger\";\r\n                    errorMSG = \"No se han podido elminar los datos\";\r\n                }\r\n            })\r\n\t\t}\r\n\t}\r\n\r\n    //Función DELETE para elminar dato específico\r\n    async function deleteWeights(provinces, year) {\r\n        const res = await fetch(BASE_WEIGHTS_PATH + \"/\" + provinces + \"/\" + year, {\r\n            method: \"DELETE\"\r\n        }).then( (res) => {\r\n            visible = true;\r\n            getStats();\r\n            if(res.status == 200){\r\n                totaldata--;\r\n                color = \"succes\";\r\n                errorMSG = \"recurso eliminado\"\r\n                console.log(\"recurso eliminado\");\r\n            }else if(res.status == 404){\r\n                color = \"danger\";\r\n                errorMSG = \"no se ha encontrado el recurso\";\r\n                console.log(\"error\");\r\n            }else{\r\n                color = \"danger\";\r\n                errorMSG = \"error\"\r\n                console.log(\"error\");\r\n            }\r\n        })\r\n    }\r\n\r\n    //Función POST para insertar un nuevo dato\r\n    async function insertWeight(){\r\n        console.log(\"Inserting weights data...\");\r\n         if (newWeight.year == \"\" || newWeight.year == null || newWeight.provinces == \"\") {\r\n             alert(\"Los campos 'Provincia' y 'Año' no pueden estar vacios\");\r\n         } else{\r\n             const res = await fetch(BASE_WEIGHTS_PATH,{\r\n             method:\"POST\",\r\n             body:JSON.stringify(newWeight),\r\n             headers:{\r\n                 \"Content-Type\": \"application/json\"\r\n             }\r\n             }).then( (res) => {\r\n                visible = true;\r\n                if(res.status == 201){\r\n                    getStats();\r\n                    totaldata++;\r\n                    console.log(\"Data introduced\");\r\n                    color = \"succes\";\r\n                    errorMSG= \"Entrada correcta\";\r\n                }else if(res.status ==400){\r\n                    console.log(\"ERROR\");\r\n                    color = \"danger\";\r\n                    errorMSG = \"Los datos no fueron introducidos\";\r\n                }else if(res.status == 409){\r\n                    console.log(\"error\");\r\n                    color = \"danger\";\r\n                    errorMSG = \"Ya existe esa entrada\";\r\n                }\r\n             });\t\r\n         }\r\n    }\r\n\r\n    /*\r\n    //getNextPage\r\n    async function getNextPage() { \r\n        console.log(totaldata);\r\n        if (page+5 > totaldata) {\r\n            page = 1\r\n        } else {\r\n            page+=5\r\n        }        \r\n        visible = true;\r\n        console.log(\"Charging page... Listing since: \"+page);\r\n        const res = await fetch(BASE_WEIGHTS_PATH + \"?limit=5&offset=\"+(-1+page));\r\n        //condicional imprime msg\r\n        color = \"success\";\r\n        errorMSG= (page+5 > totaldata) ? \"Mostrando elementos \"+(page)+\"-\"+totaldata : \"Mostrando elementos \"+(page)+\"-\"+(page+4);\r\n\r\n        if (totaldata == 0){\r\n            console.log(\"ERROR Data was not erased\");\r\n            color = \"danger\";\r\n            errorMSG= \"¡No hay datos!\";\r\n        }else if (res.ok) {\r\n            console.log(\"Ok:\");\r\n            const json = await res.json();\r\n            weightStats = json;\r\n            console.log(\"Received \" + weightStats.length + \" resources.\");\r\n        } else {\r\n            errorMSG= res.status + \": \" + res.statusText;\r\n            console.log(\"ERROR!\");\r\n        }\r\n    }\r\n\r\n    //getPreviewPage\r\n    async function getPreviewPage() {\r\n        console.log(totaldata);\r\n        if (page-5 > 1) {\r\n            page-=5; \r\n        } else page = 1\r\n        visible = true;\r\n        console.log(\"Charging page... Listing since: \"+page);\r\n        const res = await fetch(BASE_WEIGHTS_PATH + \"?limit=5&offset=\"+(-1+page));\r\n        //condicional imprime msg\r\n        color = \"success\";\r\n        errorMSG= (page+5 > totaldata) ? \"Mostrando elementos \"+(page)+\"-\"+totaldata : \"Mostrando elementos \"+(page)+\"-\"+(page+4);\r\n\r\n        if (totaldata == 0){\r\n            console.log(\"ERROR Data was not erased\");\r\n            color = \"danger\";\r\n            errorMSG= \"¡No hay datos!\";\r\n        }else if (res.ok) {\r\n            console.log(\"Ok:\");\r\n            const json = await res.json();\r\n            weightStats = json;\r\n            console.log(\"Received \"+weightStats.length+\" resources.\");\r\n        } else {\r\n            errorMSG= res.status+\": \"+res.statusText;\r\n            console.log(\"ERROR!\");\r\n        }\r\n    }*/\r\n\r\n</script>\r\n\r\n<main>\r\n    <h1 style =\"text-align: center;\">Tabla sobre el IMC por comunidades</h1>\r\n\r\n    <Alert color={color} isOpen={visible} toggle={() => (visible = false)}>\r\n        {#if errorMSG}\r\n\t\t    {errorMSG}\r\n\t    {/if}\r\n    </Alert>\r\n\r\n    <Table bordered responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>Comunidad autónoma</th>\r\n            <th>Año</th>\r\n            <th>Peso normal</th>\r\n            <th>Sobrepeso</th>\r\n            <th>Obesidad</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td><input type = \"text\" placeholder=\"Comunidad autónoma\" bind:value=\"{newWeight.provinces}\"></td>\r\n                <td><input type = \"number\" placeholder=\"2075\" bind:value=\"{newWeight.year}\"></td>\r\n                <td><input type = \"number\" placeholder=\"0000\" bind:value=\"{newWeight.normal_weight}\"></td>\r\n                <td><input type = \"number\" placeholder=\"0000\" bind:value=\"{newWeight.overweight}\"></td>\r\n                <td><input type = \"number\" placeholder=\"0000\" bind:value=\"{newWeight.obesity}\"></td>\r\n                <td><Button on:click={insertWeight}>Insertar</Button></td>\r\n            </tr>\r\n            {#each weightsStats as weightsStat}\r\n                <tr>\r\n                    <td><a href=\"#/weights-stats/{weightsStat.provinces}/{weightsStat.year}\">{weightsStat.provinces}</td>\r\n                    <td>{weightsStat.year}</td>\r\n                    <td>{weightsStat.normal_weight}</td>\r\n                    <td>{weightsStat.overweight}</td>\r\n                    <td>{weightsStat.obesity}</td>\r\n                    <td><Button outline color=\"danger\" on:click=\"{deleteWeights(weightsStat.provinces, weightsStat.year)}\">Borrar</Button></td>\r\n                </tr>\r\n            {/each}\r\n        </tbody>\r\n    </Table>\r\n\r\n    <Button color=\"success\" on:click=\"{loadInitialData}\">\r\n        Cargar datos inciales\r\n    </Button>\r\n\r\n    <Button color=\"danger\" on:click=\"{deleteALL}\">\r\n        Eliminar todos los datos\r\n    </Button>\r\n \r\n</main>","<script>\r\n    import { onMount }from \"svelte\";\r\n    import { pop }from \"svelte-spa-router\";\r\n    import Table from \"sveltestrap/src/Table.svelte\"; \r\n\timport Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n    var BASE_WEIGHTS_PATH = \"/api/v2/table-weights-stats\";\r\n    export let params = {};\r\n    let weightsStats = {};\r\n    let uptadatedNormalWeight = null;\r\n    let updatedOverweight = null;\r\n    let updatedObesity = null;\r\n    let errorMsg = \"\";\r\n\r\n    onMount(getStat);\r\n\r\n    async function getStat(){\r\n        console.log(\"Fetching datas...\");\r\n        const res = await fetch(BASE_WEIGHTS_PATH + \"/\" + params.provinces + \"/\" + params.year);\r\n        if(res.ok){\r\n            console.log(\"Ok\");\r\n            const json = await res.json();\r\n            uptadatedNormalWeight = weightsStats.normal_weight;\r\n            updatedOverweight = weightsStats.overweight;\r\n            updatedObesity = weightsStats.obesity;\r\n            console.log(\"Recived data\");\r\n        }else{\r\n            errorMsg = res.status + \" \" + res.statusText;\r\n            console.log(\"ERROR\" + errorMsg);\r\n        }\r\n    }\r\n\r\n    async function updateWeight(){\r\n        console.log(\"Updating contact...\" + JSON.stringify(params.provinces));\r\n        \r\n        const res = await fetch(BASE_WEIGHTS_PATH + \"/\" + params.provinces + \"/\" + params.year, {\r\n            method: \"PUT\",\r\n            body : JSON.stringify({\r\n                provinces: params.provinces,\r\n                year: parseInt(params.year),\r\n                normal_weight: parseFloat(uptadatedNormalWeight),\r\n                overweight: parseFloat(updatedOverweight),\r\n                obesity: parseFloat(updatedObesity)\r\n            }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then( (res) =>{\r\n            getStat();\r\n        })\r\n    }\r\n</script>\r\n\r\n<main>\r\n    <h1>Recurso {params.provinces} {params.year} listo para editar</h1>\r\n    <Table bordered>\r\n        <thead>\r\n            <tr>\r\n                <th>Comunidad autónoma</th>\r\n                <th>Año</th>\r\n                <th>Peso normal</th>\r\n                <th>Sobrepeso</th>\r\n                <th>Obesidad</th>\r\n                <th>Acciones</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td>{params.provinces}</td>\r\n                <td>{params.year}</td>\r\n                <td><input bind:value=\"{uptadatedNormalWeight}\"></td>\r\n                <td><input bind:value=\"{updatedOverweight}\"></td>\r\n                <td><input bind:value=\"{updatedObesity}\"></td>\r\n                <td><Button outline color=\"primary\" on:click={updateWeight}>Actualizar</Button></td>\r\n            </tr>\r\n        </tbody>\r\n    </Table>\r\n\r\n    {#if errorMsg}\r\n        <p style=\"color: red\">ERROR: {errorMsg}</p>\r\n    {/if}\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n</main>","\r\n<script lang=\"ts\">\r\n  \r\n\t\r\n\timport NotFound from \"./NotFound.svelte\";\r\n\timport Home from \"./Home.svelte\";\r\n  import Info from \"./Info.svelte\";\r\n\timport Router from 'svelte-spa-router';\r\n  import LifeExpectancy from './lifeExpectancy.svelte';\r\n\timport TablaAlcohol from \"./TablaAlcohol.svelte\";\r\n  import SmokerStats from \"./Smokers.svelte\";\r\n  import FrontWeight from \"./weightsStats/TablaWeights.svelte\";\r\n  import EditWeight from \"./weightsStats/EditWeight.svelte\";\r\n\timport {Navbar,NavbarBrand,Nav,NavItem,NavLink } from 'sveltestrap';\r\n\r\n\tconst routes = {\r\n\t\t\"/\":Home,\r\n    \"/info\": Info,\r\n\t\t\"/alcohol-stats\": TablaAlcohol,\r\n    \"/life-stats\" : LifeExpectancy,\r\n    \"/weights-stats\" : FrontWeight,\r\n    \"/weights-stats/:provinces/:year\" : EditWeight,\r\n    \"/smokers-stats\" : SmokerStats,\r\n\t\t'*': NotFound};\r\n</script>\r\n\r\n<main>\r\n\t<body >\r\n        <Navbar color=\"dark\" dark expand = \"md\" >\r\n            <NavbarBrand href=\"/\">SOS2021-30</NavbarBrand>\r\n            <Nav navbar >\r\n              <NavItem  >\r\n                <NavLink href=\"#/\">Inicio</NavLink>\r\n              </NavItem>\r\n              <NavItem  >\r\n                <NavLink href=\"#/info\">Información</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"#/alcohol-stats\">Tabla alcohol</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"#/smokers-stats\">Tabla fumadores</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"#/life-stats\">Tabla esperanza de vida</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"#/weights-stats\">Tabla IMC</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n        </Navbar>\r\n    \r\n    </body>\r\n\r\n\t<Router {routes}> </Router>\r\n</main>\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\tprops: {\r\n\t\tname: 'world'\r\n\t}\r\n});\r\n\r\nexport default app;"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","run_tasks","task","c","delete","f","size","is_hydrating","nodes_to_detach","append","target","node","parentNode","appendChild","insert","anchor","nextSibling","insertBefore","detach","add","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","to_number","set_data","wholeText","set_input_value","input","set_style","important","setProperty","custom_event","type","detail","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","bubble","callbacks","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","flushing","seen_callbacks","update","pop","callback","fragment","before_update","after_update","promise","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","abs","start","end","group","go","easing","css","fulfill","loop","[object Object]","handle_promise","info","token","index","resolved","child_ctx","current","needs_flush","blocks","m","mount","error","catch","hasCatch","pending","update_await_block_branch","get_spread_update","levels","updates","to_null_out","accounted_for","n","get_spread_object","spread_props","create_component","mount_component","customElement","on_destroy","new_on_destroy","map","destroy_component","instance","create_fragment","not_equal","parent_component","bound","on_disconnect","context","Map","skip_bound","ready","ret","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","end_hydrating","SvelteComponent","this","$destroy","splice","$$props","obj","$$set","fade","linear","getComputedStyle","opacity","toClassName","isArray","Boolean","classnames","args","className","color","closeClassName","closeAriaLabel","isOpen","toggle","transition","classes","alert-dismissible","closeClassNames","close","disabled","href","outline","ariaLabel","defaultAriaLabel","subscriber_queue","readable","subscribe","writable","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","stores_array","auto","inited","values","cleanup","sync","unsubscribers","store","unsub","unsubscribe","tabs","pills","vertical","horizontal","justified","navbar","card","getVerticalClass","nav-tabs","card-header-tabs","nav-pills","card-header-pills","nav-justified","nav-fill","light","dark","fixed","sticky","expand","getExpandClass","navbar-light","navbar-dark","preventDefault","stopImmediatePropagation","bordered","borderless","striped","hover","responsive","responsiveClassName","getLocation","hashPosition","location","substr","qsPosition","querystring","loc","history","back","routes","prefix","restoreScrollState","RouteItem","path","_sveltesparouter","charAt","RegExp","pattern","loose","tmp","ext","arr","shift","substring","regexparam","conditions","userData","_pattern","_keys","startsWith","match","matches","exec","out","decodeURIComponent","routesList","route","componentParams","call","createEventDispatcher","dispatchNextTick","previousScrollState","state","scrollY","scrollTo","scrollX","lastLoc","componentObj","newLoc","checkConditions","loading","loadingParams","loaded","default","scrollRestoration","$loc","country","province","year","lifeExpectancyWoman","lifeExpectancyMan","averageLifeExpectancy","LifeExpectancyStats","newLife","checkMSG","visible","page","totaldata","getLife","console","log","res","fetch","ok","json","status","statusText","alert","method","body","JSON","stringify","headers","Content-Type","confirm","SmokerStats","errorMSG","ageRange","alcoholPrematureDeath","prevalenceOfAlcoholUseDisorder","BASE_ALCOHOL_PATH","alcoholStats","newAlcohol","getStats","updateAgeRange","updatePrematureDeath","updateDisorder","dailySmoker","ocasionalSmoker","exSmoker","nonSmoker","newSmoker","getSmoker","provinces","normal_weight","overweight","obesity","BASE_WEIGHTS_PATH","weightsStats","newWeight","uptadatedNormalWeight","updatedOverweight","updatedObesity","errorMsg","getStat","parseInt","parseFloat","/","Home","/info","Info","/alcohol-stats","TablaAlcohol","/life-stats","LifeExpectancy","/weights-stats","FrontWeight","/weights-stats/:provinces/:year","EditWeight","/smokers-stats","*","NotFound"],"mappings":"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"}